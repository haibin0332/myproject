--------------------------------------------------------------------------------
2008.10.26 09:42:41		test1
--------------------------------------------------------------------------------
鲁棒哈希：
	使用mbe_bian, n = 4, method 1 and method 2
	
	结果是：鲁棒性上能够满足要求，但是区分性上偶尔会把两幅不同的图认作一样
	
	可以考虑n取得更大一点
	
脆弱哈希：
	在鲁棒哈希 n = 4 的基础上，脆弱哈希的参数为：
	随机分块的个数为 256
	差分的次数为 4 或者 差分的级数为 2
	随机块的大小为：最小为1/16，最大为1/4
	
	结果：对于我们关注的噪声、滤波、平滑、压缩等，鲁棒性过高，区分性比较好。但是过高的鲁棒性表示对细节的区分性不够。
	
	分析原因是，分块太大所致，结果会与Venkatesan的结果差不多。
	
	如果要体现差分的优势，可以考虑使用离散的，较小的分块
	差分数据量化为4级，中间两级表示一样，两端表示变化很大。差分的量化可以带来鲁棒性的提高，小的分块会带来区分性的提高。
	
--------------------------------------------------------------------------------
2008.10.26 10:33:20		test2，修改test1得到的结论
--------------------------------------------------------------------------------
	ratio1 = 1/16; ratio2 = 1/32;	
	n = 8
	
	test2需要做的实验有：
	1、观察n = 8时的鲁棒性
	2、观察随机分块变小之后的算法性能，是否在脆弱性上有所提高
	3、观察使用新的编码之后的性能，是否在鲁棒性上有所提高
	
	在test2中，首先是rdd的method1在不考虑区分和鲁棒的合理性的前提下，性能超级好，各方面表现都很优异。值得深入分析这个的原因。
	但是method2的测试出现了奇怪的现象，汉明距的比较，竟然出现了距离大于1的情况，不知道为什么。
		-- 分析原因，是测试程序编错了，method2和method3用了同一个customedOutName
		-- 需要重跑这两个实验，尝试着观察一下更多级差分的情况
		-- 在调试method2时，将程序做了一定的修改，两个修改：
			1、即使是差分，也可以构成循环，这样，每一级差分都可以到相同的信息
			2、在编码之前，每一级差分都记录数据，而不是在第一级差分之后就得到简单的0、1编码
	
	method3的性能也是超级好，哈哈，绝对是创造了一个新的巅峰。关键就是如何去说这个事情了：）
	
	结论：这种方法能够很好的记录图像的结构信息，而且鲁棒性和区分性都十分好。
		虽然图像经过攻击，已经面目全非，但是只要是源图像产生的，必然保留原图的统计意义上的结构信息，这种方法依然能够正确识别。
		
		但是，设计这个算法的本意是为了提高算法在细节上的区分性，现在看来显然是不能够了。
		这也从一定角度揭示了强调区分性的认证算法应该从不同的角度出发。
		比如说：
			1、结构信息虽然有助于记录图像的信息，但是过于鲁棒，虽然认证算法也需要一定的鲁棒
			2、在保证鲁棒性的前提下，认证算法应该是对内容变化十分敏感的，这也意味着认证算法需要非常精巧的阈值的设定，阈值可能很低
			3、依然是这里的算法，高级差分可能会提供算法需要的敏感性。但是需要固定分块位置，并且考虑差分变化与原图位置的推导关系。
			
	最后，基于现有算法的进一步深入开发：
	1、圈圈算法，分块不必平均，但是差分块一定要有间隔（去除图像的强相关性），可能会得到综合性能很好的算法
	2、鲁棒哈希的产生，比如说ROI，比如说边缘提取，着重于关键部位的信息记录，但是通过高级差分提高认证需要的敏感性。这里的关键是：不同的鲁棒哈希可能会产生不同的作用。比如说边缘是重点，比如说图像质量的初步保证
	3、为了去除图像本身的强相关性，并且对图像分块位置可以控制，需要考虑分块的方法，比如说如何以边缘为分界寻找分块。如何确定差分变化与分块的位置关系
	
--------------------------------------------------------------------------------
2008.10.27 09:44:46		test3
--------------------------------------------------------------------------------
	为了进一步的工作，需要观察一些规律：
	1、差分级数增大时，差分数值会变小或者以某种方式收敛么？
		-- 差分级数增大时，差分数值的取值范围会逐渐变大，差不多每一级都变大一倍
	2、差分级数增大，以每一级单独作为hash，那么性能变化的规律是什么？到什么程度可以用来做认证了？
		-- 差分级数增大，每一级单独作为hash，好像各级之间性能变化不大，依然有很好的区分性和鲁棒性
		-- 也就是说，级数增大并没有变得更加敏感。但是受到启发执行了试验9
		-- 既然级数增加没有得到敏感性的增强，可以考虑通过平均来提高算法性能，这个在试验9中应该是有意义的。
		-- 一方面是没有敏感性的增强，另一方面是没有得到单调的表现
	3、method1，差分步长取多个和取一个是否得到一样的性能？
		-- 没有做实验，但是估计和级数增加的效果是一样的。
	4、method2，如果级数增大是有意义的，那么，如何得到一个合理的组合？并且如何去解释它？
		-- 级数增大是没有意义的，需要寻找一种有意义的扩散的方式。
	9、图像块变化，可以看到不论使用那种方式，图像哈希发生了成比例的变化，虽然没有扩散，但是这种成比例的关系还是很好的。
		-- 虽然成比例（事实上是块的剪切）会给图像hash带来固定大小的影响，而且影响很小。起主导作用的还是原有的整体攻击。因此这种比例除非是在已知攻击强度的情况下，否则是没有实际价值的。		
	
	5、+ 圈圈算法
	6、+ 边缘提取算法
	7、+ 特征点方法
	8、规则分块、间隔差分方法

	
	2、3的结论：级数用一个是足以记录信息的，多级的差分需要更多的bit位，并且只能够用来平均，使得结果更加精确而已，可以考虑用在认证时。
	次数多少其实也没有太大的关系，但是次数增加之后不能够用做平均，因为没有平均的依据。但是可以直接用来增加hash记录的信息量，即次数增多，直接得到更加精确的匹配结果。

--------------------------------------------------------------------------------
2008.10.28 02:17:18		关于扩散的实验
--------------------------------------------------------------------------------	
	对不同块之间的差分求和，求和公式： 1/(1/x + 1/y)
	1、选择差分次数越多，每个块的作用越小，但是扩散范围越大
	2、差分越小，即灰度越相近的块影响越大，差分越大，灰度越远的块影响越小。这和图像是合理的，第一，越接近的块差分越小，但是对变化越敏感，第二，月平滑的部位图像变化越敏感
	3、有三种控制方式：
		1、x，y都是不同的块之间的比较结果，即修改现有程序的平移的方法
		2、选择差分次数，差分次数在一定程度上控制了扩散的程度
		3、选择x、y的指数，不同的指数也调节了敏感的程度
	4、问题：应该选择怎样的编码方式？
	
--------------------------------------------------------------------------------
2008.10.28 13:37:27		关于讨论
--------------------------------------------------------------------------------
	1、很多想法：
		1、霍夫曼编码、二叉树的方法。这个说法提示了可能有更好的方法，可以在编码和篡改位置定位上得到提高
		2、块扰动和整体变化的特征，对差分序列的频率特征进行观察，按此得到启示。事实上，篡改的敏感和鲁棒性的矛盾在这里表现得十分集中，而如果能够在这个方向上得到进展，意义十分重大。可以通过实验观察。
		3、内容保持操作有两个意义，一个是视觉上的，一个是物理上。现有的差分的方法从物理上能够很好的保留算法的特征。
		4、基于现有算法的各种变种。
--------------------------------------------------------------------------------
2008.10.28 21:26:04		
--------------------------------------------------------------------------------
	使用真正的差分可以很容易的就实现扩散。即一位有错，此后皆错。使用循环冗余的方法就可以解决比例和位置问题。
	但是ph的矛盾的核心在于：如何区分有意的篡改和无意的改动，比如说：能够做到对全局变化不敏感，但是对局部变化敏感，这样的方法就算是一个突破。
	可以有两个思路来做到这种区分，第一：低阶差分用来鲁棒，高阶差分用来敏感。第二：设计编码方法，在编码的匹配上，根据不同的匹配结果的模式特征来区分。
	通过实验可以观察变化在高阶差分中的扩散效果。	
	
--------------------------------------------------------------------------------
2008.10.29 14:18:47		整理工作思路
--------------------------------------------------------------------------------
	不同主题及试验
	1、物理上的鲁棒性与区分性、内容保持操作的两个意义：物理上的，视觉上的
		1、两张很差的图，依然能够区分。设计与现有区分性试验逻辑相反的试验：由差的找好的
	2、扩散
		1、主题：同时提供鲁棒性与脆弱性，通过扩散来实现脆弱性		
		2、方法：如何区分位置篡改和整体攻击。通过扩散的参数或者扩散的度量来实现这二者的区分，通过分组的方法
		3、试验：分组的程度，扩散的规律，整体攻击的影响与扩散的影响的比较
	3、扩散的度量
		1、扩散程度的度量方法，安全性分析
	4、鲁棒性的控制，比如通过分组平均控制鲁棒性，使其结果符合人的感受
	5、不需要密钥的hash算法的安全性
	6、扩展想法
		1、不同的编码方法：如二叉树、霍夫曼等
		2、圈圈
		3、鲁棒特征提取作为密钥，比如边缘、特征点、roi等
		4、控制扩散的不同方法，比如对局部敏感的求和方法
		5、如何设计参数，使得鲁棒性能够得以调节，使其符合应用或者人的感受。各种方法
		6、如何设计参数，使得扩散速度可调，各种方法
		7、如何做到定位，各种方法
		8、定位与扩散的矛盾
		
--------------------------------------------------------------------------------
2008.10.29 19:32:08
--------------------------------------------------------------------------------
E:\MBench\outdir\zh_rdd\test3\观察差分对不同攻击的特点
	观察结果是：
	1、这种编码对块替换和噪声引起的偏差能够分别记录，是一个简单加法
	2、块替换引起的编码的差幅值很大，噪声引起的很小，这就是上面所谓的模式区分的一种解决方法。可以做到区分位置篡改和整体攻击。	
	
	进一步，需要设计针对性的攻击程序和测试程序。然后根据测试结果选择参数。这要从整体上了解算法的性能。
	
--------------------------------------------------------------------------------
2008.10.29 23:43:05		跟李萌讨论
--------------------------------------------------------------------------------	
	我只能够定性的说是什么。就是结构信息。你看一个图，为什么能够印象深刻？就是他有的地方黑有的地方白，而且黑白关系从多个维度上都是固定的 
	
	李萌 23:21:14
	我觉着要是能从正反两方面界定了你的feature representation，倒是有点意思
	李萌 23:21:43
	把你算法的鲁棒限度比较全方面的找出来
	李萌 23:22:10
	然后描述你提的特征到底是什么
	
	李萌 23:15:42
	恩，或者说，对图像进行什么操作可以让你分辨不出来？
	
--------------------------------------------------------------------------------
2008.11.03 20:16:04		test4
--------------------------------------------------------------------------------
	通过flower数据库，检查原始算法的区分性和鲁棒性，结果证明也很不错
	
--------------------------------------------------------------------------------
2008.11.07 12:17:37		test5
--------------------------------------------------------------------------------
	之前所谓的原始算法都是用图像的鲁棒hash作为密钥的，这样会有一次一密的效果。
	为了检查鲁棒哈希对区分性的影响，在此检查固定密钥的差分方法的性能。
	使用flower数据库，算是比较严格
	
	试验结果证明，用不用鲁棒哈希作为密钥，效果差不多。
	
	2008.11.17
	效果还是差很多的，这里的试验有问题。因为rand的参数key超出了范围，导致所有随机分块都是一样的。
	
--------------------------------------------------------------------------------
2008.11.16 17:12:43		test6
--------------------------------------------------------------------------------
	测试鲁棒哈西对区分性和鲁棒性的影响
	
	直接观察mbe_bian作为鲁棒算法的部分，即使n取到4，它对噪声的性能还是不如差分的算法。
	不行
	
--------------------------------------------------------------------------------
2008.11.19 13:30:28		思考：特征点
--------------------------------------------------------------------------------
	比如将鲁棒的特征点作为输入，控制随机块的选择，这个方法应该可以提高特征点信息记录的能力，同时可以利用差分的优势。
	问题：
		特征点本身就没有随机差分的方法鲁棒
		特征点取出来，如果仅仅是几位的变化，那么同步就将成为一个大问题
		
--------------------------------------------------------------------------------
2008.12.03 14:01:42		观察不同的攻击对差分值的差的影响 继续之前test 3的工作
--------------------------------------------------------------------------------
	